function Main.sgn 0
push argument 0
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
push argument 0
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
return
label IF_FALSE1
push constant 0
return
function Main.f 1
push argument 0
neg
push argument 0
call Math.multiply 2
push constant 9
add
pop local 0
push local 0
call Main.sgn 1
push local 0
call Math.multiply 2
push constant 9
sub
return
function Main.drawAxes 0
push constant 0
push static 1
push static 0
call Math.multiply 2
push constant 255
push static 1
push static 0
call Math.multiply 2
call Screen.drawLine 4
pop temp 0
push constant 2
push static 1
call Math.multiply 2
push static 0
call Math.multiply 2
push static 1
push static 0
call Math.multiply 2
push constant 2
push static 1
call Math.multiply 2
push static 0
call Math.multiply 2
push static 3
push static 2
call Math.multiply 2
sub
push static 1
push static 0
call Math.multiply 2
push static 2
sub
call Screen.drawLine 4
pop temp 0
push constant 2
push static 1
call Math.multiply 2
push static 0
call Math.multiply 2
push static 1
push static 0
call Math.multiply 2
push constant 2
push static 1
call Math.multiply 2
push static 0
call Math.multiply 2
push static 3
push static 2
call Math.multiply 2
sub
push static 1
push static 0
call Math.multiply 2
push static 2
add
call Screen.drawLine 4
pop temp 0
push static 1
push static 0
call Math.multiply 2
push constant 0
push static 1
push static 0
call Math.multiply 2
push constant 255
call Screen.drawLine 4
pop temp 0
push static 1
push static 0
call Math.multiply 2
push constant 0
push static 1
push static 0
call Math.multiply 2
push static 2
sub
push static 3
push static 2
call Math.multiply 2
call Screen.drawLine 4
pop temp 0
push static 1
push static 0
call Math.multiply 2
push constant 0
push static 1
push static 0
call Math.multiply 2
push static 2
add
push static 3
push static 2
call Math.multiply 2
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Main.nudge 0
push argument 0
push constant 256
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 255
return
label IF_FALSE0
push argument 0
return
function Main.plotFunction 7
push constant 0
not
pop local 6
push static 0
neg
pop local 4
label WHILE_EXP0
push local 4
push static 0
push constant 1
add
lt
not
if-goto WHILE_END0
push local 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push static 0
add
push static 1
call Math.multiply 2
call Main.nudge 1
pop local 0
push local 4
call Main.f 1
pop local 5
push static 0
push local 5
sub
push static 1
call Math.multiply 2
call Main.nudge 1
pop local 1
push local 5
push static 0
gt
not
push local 5
push static 0
neg
lt
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 6
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push local 4
push static 0
add
push static 1
call Math.multiply 2
call Main.nudge 1
pop local 2
push local 4
call Main.f 1
pop local 5
push static 0
push local 5
sub
push static 1
call Math.multiply 2
call Main.nudge 1
pop local 3
push local 5
push static 0
gt
not
push local 5
push static 0
neg
lt
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 1
push local 2
push local 3
call Screen.drawLine 4
pop temp 0
push local 2
pop local 0
push local 3
pop local 1
goto IF_END2
label IF_FALSE2
push constant 0
not
pop local 6
label IF_END2
label IF_END0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Main.main 0
push constant 32
pop static 0
push constant 4
pop static 1
push constant 4
pop static 2
push constant 4
pop static 3
call Main.drawAxes 0
pop temp 0
call Main.plotFunction 0
pop temp 0
push constant 0
return
